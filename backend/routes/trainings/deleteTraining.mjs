import { PrismaClient } from '@prisma/client';
import { notifyTelegram } from '../../utils/telegram.mjs';

const prisma = new PrismaClient();

export default async function deleteTraining(req, res) {
  const { id } = req.params;

  if (req.user.role !== 'ADMIN') {
    return res.status(403).json({ error: 'Only admin can delete trainings' });
  }

  const training = await prisma.training.findUnique({
    where: { id },
    include: { user: true },
  });

  if (!training) {
    return res.status(404).json({ error: 'Training not found' });
  }

  if (training.wasCounted) {
    return res.status(400).json({ error: '–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–µ—â—ë–Ω–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É' });
  }

  await prisma.training.delete({ where: { id } });

  const today = new Date();
  const trainingDate = new Date(training.date);

  if (training.user?.telegramId && trainingDate >= new Date(today.toDateString())) {
    await notifyTelegram(
      training.user.telegramId,
      `‚ùå –í–∞—à–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ ${trainingDate.toLocaleDateString()} –≤ ${training.hour}:00 –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞`,
      null // üîß —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏—Å—å –∫–Ω–æ–ø–∫–∏
    );
  }

  res.json({ success: true });
}
