import express from 'express';
import { bot } from '../bot/index.mjs';
import { prisma } from '../lib/prisma.mjs'; // –∏–ª–∏ ../utils/db.mjs ‚Äî —Å–º–æ—Ç—Ä–∏ –ø–æ –ø—Ä–æ–µ–∫—Ç—É

const router = express.Router();

/**
 * POST /api/telegram/notify
 * –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ —Ä–æ–ª–∏
 */
router.post('/notify', async (req, res) => {
  const { message, role } = req.body;

  if (!message || !role) {
    return res.status(400).json({ error: '–¢—Ä–µ–±—É—é—Ç—Å—è message –∏ role' });
  }

  try {
    const users = await getUsersFromDb(role);

    let success = 0;

    for (const user of users) {
      try {
        await bot.telegram.sendMessage(user.telegramId, `üì∞ ${message}`);
        success++;
      } catch (err) {
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ${user.telegramId}:`, err.message);
      }
    }

    return res.json({ success, total: users.length });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ:', err);
    return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ' });
  }
});

export default router;

// ‚úÖ –†–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏–∑ –ë–î
async function getUsersFromDb(role) {
  return await prisma.user.findMany({
    where: {
      role: role.toUpperCase(),
      telegramId: { not: null },
    },
    select: {
      telegramId: true,
    },
  });
}
