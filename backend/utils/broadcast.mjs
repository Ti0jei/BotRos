import fetch from 'node-fetch';

const API_URL = process.env.API_BASE_URL;

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ —Ä–æ–ª–∏
 * @param {string} text ‚Äî —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {'USER'|'ADMIN'} role ‚Äî —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
 * @returns {{ success: number, total: number }}
 */
export async function notifyBroadcast(text, role = 'USER') {
  const cleanText = (text || '').trim();
  const roleNormalized = (role || '').toUpperCase();

  if (!API_URL) throw new Error('‚ùå API_BASE_URL –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏');
  if (!cleanText || cleanText.length < 5) throw new Error('‚ùå –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π');
  if (!['USER', 'ADMIN'].includes(roleNormalized)) throw new Error('‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å');

  const url = `${API_URL.replace(/\/$/, '')}/api/telegram/notify`;
  const payload = { message: cleanText, role: roleNormalized };

  const startedAt = Date.now();
  console.log(`üì° [notifyBroadcast] ‚Üí ${url}`);
  console.log('üì® Payload:', payload);

  try {
    const res = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    });

    const elapsed = Date.now() - startedAt;

    if (!res.ok) {
      const errText = await res.text();
      console.error(`‚ùå API ${res.status} (${elapsed}ms): ${errText}`);
      throw new Error(`–û—à–∏–±–∫–∞ API ${res.status}: ${errText}`);
    }

    const result = await res.json();
    console.log(`‚úÖ –û—Ç–≤–µ—Ç (${elapsed}ms):`, result);

    if (typeof result.success !== 'number' || typeof result.total !== 'number') {
      throw new Error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API');
    }

    return result;
  } catch (err) {
    console.error('‚ùå notifyBroadcast FAILED:', err.message);
    throw err;
  }
}
