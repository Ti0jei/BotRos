// newsNotify.mjs

import { Markup } from 'telegraf';
import { isRegistered } from './middleware.mjs';
import { notifyBroadcast } from '../utils/broadcast.mjs';

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –Ω–æ–≤–æ—Å—Ç–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
 * @param {Telegraf} bot
 */
export function setupNewsNotification(bot) {
  // üü¢ –°—Ç–∞—Ä—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
  bot.action('notify_start', isRegistered, async (ctx) => {
    ctx.session = ctx.session || {};
    ctx.session.notifyState = { step: 'choose_role' };

    await ctx.answerCbQuery();
    await ctx.reply(
      '–ö–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É?',
      Markup.inlineKeyboard([
        [Markup.button.callback('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', 'notify_to_users')],
        [Markup.button.callback('üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º', 'notify_to_admins')],
      ])
    );
  });

  // üü° –í—ã–±–æ—Ä —Ä–æ–ª–∏
  bot.action('notify_to_users', isRegistered, async (ctx) => {
    ctx.session = ctx.session || {};
    ctx.session.notifyState = { role: 'USER', step: 'awaiting_text' };

    await ctx.answerCbQuery();
    await ctx.reply('üìù –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  });

  bot.action('notify_to_admins', isRegistered, async (ctx) => {
    ctx.session = ctx.session || {};
    ctx.session.notifyState = { role: 'ADMIN', step: 'awaiting_text' };

    await ctx.answerCbQuery();
    await ctx.reply('üìù –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:');
  });

  // üìù –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
  bot.on('text', isRegistered, async (ctx, next) => {
    const state = ctx.session?.notifyState;
    console.log('üß™ notifyState:', state);

    if (!state || state.step !== 'awaiting_text') {
      return next?.();
    }

    const text = ctx.message.text.trim();
    if (text.length < 10) {
      return ctx.reply('‚ö†Ô∏è –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤.');
    }

    state.text = text;
    state.step = 'awaiting_confirm';

    await ctx.reply(
      `üì® –í–æ—Ç —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:\n\n${text}`,
      Markup.inlineKeyboard([
        [Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'notify_confirm')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'notify_cancel')],
      ])
    );
  });

  // ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  bot.action('notify_confirm', isRegistered, async (ctx) => {
    const state = ctx.session?.notifyState;
    if (!state?.text || !state?.role) {
      return ctx.reply('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ /menu');
    }

    await ctx.answerCbQuery('üöÄ');

    // –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    if (ctx.callbackQuery?.message?.message_id) {
      await ctx.telegram.deleteMessage(ctx.chat.id, ctx.callbackQuery.message.message_id).catch(() => {});
    }

    await ctx.reply('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...');

    try {
      const result = await notifyBroadcast(state.text, state.role);
      await ctx.reply(`‚úÖ –ì–æ—Ç–æ–≤–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${result.success}/${result.total} (${state.role})`);
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ:', err);
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }

    ctx.session.notifyState = undefined;
  });

  // ‚ùå –û—Ç–º–µ–Ω–∞
  bot.action('notify_cancel', isRegistered, async (ctx) => {
    ctx.session.notifyState = undefined;
    await ctx.answerCbQuery('‚ùå');

    // –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    if (ctx.callbackQuery?.message?.message_id) {
      await ctx.telegram.deleteMessage(ctx.chat.id, ctx.callbackQuery.message.message_id).catch(() => {});
    }

    await ctx.reply('‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ /menu');
  });
}
