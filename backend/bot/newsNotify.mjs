// bot/newsNotify.mjs

import { Markup } from 'telegraf';
import { isRegistered } from './middleware.mjs';
import { notifyAllUsers } from './notifications.mjs'; // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –ø—É—Ç—å

const notifyStates = new Map();

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –Ω–æ–≤–æ—Å—Ç–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
 * @param {Telegraf} bot
 */
export function setupNewsNotification(bot) {
  // –°—Ç–∞—Ä—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
  bot.action('notify_start', isRegistered, async (ctx) => {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    notifyStates.set(telegramId, { step: 'awaiting_text' });
    await ctx.answerCbQuery('‚úÖ');
    await ctx.reply('üìù –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.');
  });

  // –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
  bot.on('text', isRegistered, async (ctx) => {
    const telegramId = ctx.from?.id;
    if (!telegramId || !notifyStates.has(telegramId)) return;

    const state = notifyStates.get(telegramId);
    if (state.step !== 'awaiting_text') return;

    const message = ctx.message.text.trim();
    if (message.length < 10) {
      return ctx.reply('‚ö†Ô∏è –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤.');
    }

    state.text = message;
    state.step = 'awaiting_confirm';

    await ctx.reply(`üì® –í–æ—Ç —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:\n\n${state.text}`, Markup.inlineKeyboard([
      Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'notify_confirm'),
      Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'notify_cancel'),
    ]));
  });

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
  bot.action('notify_confirm', isRegistered, async (ctx) => {
    const telegramId = ctx.from?.id;
    const state = notifyStates.get(telegramId);
    if (!state?.text) return;

    await ctx.answerCbQuery('üöÄ');
    await ctx.reply('üöÄ –†–∞—Å—Å—ã–ª–∞—é...');

    try {
      const result = await notifyAllUsers(state.text);
      notifyStates.delete(telegramId);
      await ctx.reply(`‚úÖ –ì–æ—Ç–æ–≤–æ! –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã ${result.success}/${result.total} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.`);
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ:', err);
      notifyStates.delete(telegramId);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ.');
    }
  });

  // –û—Ç–º–µ–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
  bot.action('notify_cancel', isRegistered, async (ctx) => {
    const telegramId = ctx.from?.id;
    notifyStates.delete(telegramId);
    await ctx.answerCbQuery('‚ùå');
    await ctx.reply('‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
  });
}
