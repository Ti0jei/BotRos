// bot/notifications.mjs

import { bot } from './index.mjs';

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @param {number|string} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * @param {string|null} trainingId - ID —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
 */
export async function notifyTelegram(telegramId, text, trainingId = null) {
  if (!telegramId || !text) {
    console.warn('‚ùó notifyTelegram: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
    return;
  }

  try {
    const extra = trainingId
      ? {
          reply_markup: {
            inline_keyboard: [
              [
                { text: '‚úÖ –ë—É–¥—É', callback_data: `attend:${trainingId}` },
                { text: '‚ùå –ù–µ –±—É–¥—É', callback_data: `decline:${trainingId}` },
              ],
            ],
          },
        }
      : {};

    await bot.telegram.sendMessage(telegramId, text, extra);
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${telegramId}${trainingId ? ' (—Å –∫–Ω–æ–ø–∫–∞–º–∏)' : ''}`);
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId}:`, err.message);
  }
}

/**
 * –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (–ø–æ —Ä–æ–ª—è–º)
 * @param {Object} options - –û–ø—Ü–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
 * @param {string} options.text - –¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
 * @param {string} [options.to='ALL'] - 'ALL' –∏–ª–∏ 'ADMINS'
 * @param {Array<{telegramId: string, role: string}>} users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export async function notifyBroadcast({ text, to = 'ALL' }, users) {
  if (!text || !Array.isArray(users)) {
    console.warn('‚ùó notifyBroadcast: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
    return;
  }

  const filtered = to === 'ADMINS'
    ? users.filter((u) => u.role === 'ADMIN' && u.telegramId)
    : users.filter((u) => u.telegramId);

  let success = 0;

  for (const user of filtered) {
    try {
      await bot.telegram.sendMessage(user.telegramId, `üì∞ ${text}`);
      success++;
    } catch (err) {
      console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ${user.telegramId}:`, err.message);
    }
  }

  console.log(`üì¢ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${success}/${filtered.length} —É—Å–ø–µ—à–Ω–æ.`);
}
