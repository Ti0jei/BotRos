// bot/notifications.mjs

import { bot } from './index.mjs';

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @param {number|string} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * @param {string|null} trainingId - ID —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
 */
export async function notifyTelegram(telegramId, text, trainingId = null) {
  if (!telegramId) {
    console.warn('‚ùó notifyTelegram: –Ω–µ —É–∫–∞–∑–∞–Ω telegramId');
    return;
  }

  const payload = {
    chat_id: telegramId,
    text,
  };

  // –î–æ–±–∞–≤–ª—è–µ–º inline-–∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ trainingId
  if (trainingId) {
    payload.reply_markup = {
      inline_keyboard: [[
        { text: '‚úÖ –ë—É–¥—É', callback_data: `attend:${trainingId}` },
        { text: '‚ùå –ù–µ –±—É–¥—É', callback_data: `decline:${trainingId}` }
      ]]
    };
  }

  try {
    const res = await fetch(`https://api.telegram.org/bot${bot.token}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    });

    const data = await res.json();
    if (!data.ok) {
      console.error('‚ùå Telegram API –æ—à–∏–±–∫–∞:', data);
    } else {
      console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${telegramId}`);
    }
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', err.message);
  }
}

/**
 * –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (–ø–æ —Ä–æ–ª—è–º)
 * @param {Object} options - –û–ø—Ü–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
 * @param {string} options.text - –¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
 * @param {string} options.to - 'ALL' –∏–ª–∏ 'ADMINS'
 * @param {Array} users - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π [{ telegramId, role }]
 */
export async function notifyBroadcast({ text, to = 'ALL' }, users) {
  const targets =
    to === 'ADMINS'
      ? users.filter((u) => u.role === 'ADMIN' && u.telegramId)
      : users.filter((u) => u.telegramId);

  for (const user of targets) {
    try {
      await bot.telegram.sendMessage(user.telegramId, `üì∞ ${text}`);
    } catch (err) {
      console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ${user.telegramId}:`, err.message);
    }
  }
}
