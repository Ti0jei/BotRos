// bot/admin.mjs
import { Markup } from 'telegraf';
import { isAdmin } from './middleware.mjs';
import { notifyAllClients, notifyAllAdmins } from './notifications.mjs';

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç –∞–¥–º–∏–Ω–∞
 */
export function setupAdminCommands(bot) {
  bot.command('notify', isAdmin, async (ctx) => {
    await ctx.reply('–ö–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏–º?', {
      reply_markup: Markup.inlineKeyboard([
        [Markup.button.callback('üë• –í—Å–µ–º', 'notify_all')],
        [Markup.button.callback('üõ† –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º', 'notify_admins')],
      ]),
    });
  });

  bot.action('notify_all', isAdmin, async (ctx) => {
    await ctx.answerCbQuery();
    ctx.session ??= {};
    ctx.session.notifyTarget = 'all';
    await ctx.editMessageText('‚úèÔ∏è –ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  });

  bot.action('notify_admins', isAdmin, async (ctx) => {
    await ctx.answerCbQuery();
    ctx.session ??= {};
    ctx.session.notifyTarget = 'admins';
    await ctx.editMessageText('‚úèÔ∏è –ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤:');
  });

  bot.on('text', isAdmin, async (ctx, next) => {
    const target = ctx.session?.notifyTarget;
    if (!target) return next();

    const text = ctx.message.text.trim();
    if (!text) return ctx.reply('‚ö†Ô∏è –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.');
    if (text.length < 3) return ctx.reply('‚ö†Ô∏è –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π.');

    if (target === 'all') {
      await notifyAllClients(text);
      await ctx.reply('‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.');
    } else if (target === 'admins') {
      await notifyAllAdmins(text);
      await ctx.reply('‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º.');
    }

    delete ctx.session.notifyTarget;
  });
}
