import { Markup } from 'telegraf';
import { isRegistered } from './middleware.mjs';
import { showMainMenu } from './handlers.mjs';

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –º–µ–Ω—é
 * @param {Telegraf} bot
 */
export function setupCommands(bot) {
  // –ö–æ–º–∞–Ω–¥–∞ /start
  bot.start(isRegistered, async (ctx) => {
    await ctx.reply('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!');
    await showMainMenu(ctx);
  });

  // –ö–æ–º–∞–Ω–¥–∞ /menu
  bot.command('menu', isRegistered, async (ctx) => {
    await showMainMenu(ctx);
  });

  // –ö–æ–º–∞–Ω–¥–∞ /testme
  bot.command('testme', isRegistered, async (ctx) => {
    const tgId = ctx.from?.id;
    const username = ctx.from?.username || ctx.from?.first_name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

    await ctx.reply(`‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!\n–¢–≤–æ–π Telegram ID: ${tgId}\n–ò–º—è: ${username}`);
  });

  // –ö–Ω–æ–ø–∫–∞ üìã –ú–µ–Ω—é
  bot.hears('üìã –ú–µ–Ω—é', isRegistered, async (ctx) => {
    try {
      if (ctx.message?.message_id) {
        await ctx.deleteMessage(ctx.message.message_id).catch(() => {});
      }
    } catch (_) {}

    await showMainMenu(ctx);
  });

  // –í—Å–µ –ø—Ä–æ—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  bot.on('message', isRegistered, async (ctx, next) => {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    // üí° –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ–π—á–∞—Å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞—Å—Å—ã–ª–∫–∏ ‚Äî –Ω–µ –º–µ—à–∞–µ–º
    if (ctx.session?.notifyState?.step === 'awaiting_text') {
      return next?.();
    }

    // AI-–º–æ–¥ ‚Äî –Ω–µ –º–µ—à–∞–µ–º
    const { aiContexts } = await import('./ai.mjs');
    const inAiMode = aiContexts.has(telegramId);

    if (!inAiMode) {
      await ctx.reply('üìã –ú–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ —Å–Ω–∏–∑—É ‚¨áÔ∏è', Markup.keyboard([['üìã –ú–µ–Ω—é']]).resize());
    }

    return next?.();
  });
}
